import React, { useState } from 'react';
import { classNames } from '../utilities';
import { TickIcon } from '.';

export const ReloadIcon = ({ fill = '#000', id, className, onClick }) => {
  const [isHovered, setIsHovered] = useState(false);
  const [showTick, setShowTick] = useState(false);

  const handleCopyClick = () => {
    setShowTick(true);
    setIsHovered(false);
    setTimeout(() => {
      setShowTick(false);
    }, 2000);
    onClick ? onClick() : null;
  };

  return (
    <div className="icon-container">
      {showTick ? (
        <TickIcon />
      ) : (
        <svg
          className={classNames(
            'reload-icon cursor-pointer',
            className ? className : '',
            isHovered ? 'hovered' : ''
          )}
          onMouseEnter={() => setIsHovered(true)}
          onMouseLeave={() => setIsHovered(false)}
          onClick={handleCopyClick}
          width="16"
          height="16"
          viewBox="0 0 16 16"
          fill={isHovered ? 'black' : '#00d091'}
          stroke="none"
        >
          <path
            d="M15.4356 9.6C15.5099 9.59989 15.5836 9.61451 15.6522 9.64302C15.7209 9.67153 15.7833 9.71335 15.8357 9.76609C15.8882 9.81882 15.9296 9.88141 15.9577 9.95026C15.9859 10.0191 16.0001 10.0928 15.9995 10.1672V12.7304C16.0001 12.8044 15.986 12.8778 15.9581 12.9464C15.9303 13.015 15.8891 13.0774 15.8371 13.1301C15.7851 13.1828 15.7232 13.2247 15.655 13.2534C15.5868 13.2822 15.5136 13.2972 15.4395 13.2976C15.3655 13.2972 15.2923 13.2822 15.2241 13.2534C15.1559 13.2247 15.094 13.1828 15.042 13.1301C14.99 13.0774 14.9488 13.015 14.921 12.9464C14.8931 12.8778 14.879 12.8044 14.8796 12.7304V11.8304C13.4228 14.2752 10.7189 16 7.80538 16C4.27749 16 1.32077 13.8232 0.0384131 10.468C-0.0154299 10.3282 -0.0120377 10.1728 0.0478548 10.0355C0.107747 9.89822 0.219318 9.79003 0.358403 9.7344C0.646395 9.6216 0.971185 9.7664 1.08318 10.0584C2.20315 12.988 4.75347 14.8664 7.80538 14.8664C10.5021 14.8664 13.0212 13.1208 14.1948 10.7432L13.018 10.7512C12.944 10.7513 12.8707 10.7368 12.8023 10.7086C12.7338 10.6803 12.6717 10.6388 12.6193 10.5865C12.5669 10.5342 12.5253 10.4721 12.497 10.4037C12.4686 10.3353 12.454 10.262 12.454 10.188C12.4521 10.0386 12.5096 9.89445 12.6138 9.78735C12.7181 9.68025 12.8606 9.61891 13.01 9.6168L15.4356 9.6ZM8.19577 0C11.7221 0 14.6796 2.1768 15.9619 5.532C16.0158 5.67179 16.0124 5.82717 15.9525 5.96447C15.8926 6.10178 15.781 6.20997 15.6419 6.2656C15.5731 6.29244 15.4997 6.30533 15.4258 6.30354C15.352 6.30175 15.2792 6.2853 15.2118 6.25516C15.1444 6.22502 15.0836 6.18177 15.033 6.12795C14.9824 6.07412 14.9431 6.01078 14.9172 5.9416C13.7972 3.012 11.2469 1.1336 8.19497 1.1336C5.49825 1.1336 2.97912 2.8792 1.80556 5.2568L2.98232 5.2488C3.05635 5.24869 3.12967 5.26319 3.19809 5.29144C3.26651 5.3197 3.32869 5.36117 3.38107 5.41347C3.43345 5.46578 3.47501 5.52791 3.50336 5.59629C3.53171 5.66467 3.54631 5.73797 3.54631 5.812C3.54823 5.96145 3.49076 6.10555 3.38651 6.21265C3.28226 6.31975 3.13977 6.38109 2.99032 6.3832L0.563997 6.4C0.489634 6.40011 0.415986 6.38549 0.347302 6.35698C0.278619 6.32847 0.216261 6.28665 0.163828 6.23392C0.111394 6.18118 0.069922 6.11859 0.0418059 6.04974C0.0136898 5.9809 -0.000514017 5.90716 1.42097e-05 5.8328V3.2696C1.42097e-05 2.956 0.250407 2.7024 0.559997 2.7024C0.868788 2.7024 1.11998 2.956 1.11998 3.2696V4.1696C2.57674 1.7248 5.28066 0 8.19417 0H8.19577Z"
            fill={isHovered ? 'black' : '#00d091'}
          />
        </svg>
      )}
    </div>
  );
};
